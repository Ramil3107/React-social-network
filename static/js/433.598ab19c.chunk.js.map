{"version":3,"file":"static/js/433.598ab19c.chunk.js","mappings":"wMACA,GAAgB,QAAU,wBAAwB,KAAO,qBAAqB,OAAS,uBAAuB,SAAW,yBAAyB,QAAU,wBAAwB,WAAa,4B,SCM3LA,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,KAEdC,EAAO,YAFsB,EAATC,GAIxB,OACI,gBAAKC,UAAWC,EAAAA,KAAhB,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,OAK1BM,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OACI,gBAAKJ,UAAWC,EAAAA,QAAhB,SACKG,KAoDb,EA9Ce,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WAE7B,GAA0CC,EAAAA,EAAAA,MAAlCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MAE5BC,EAAWN,EAOXO,EAAWD,EAASE,QAAQC,KAAI,SAAAC,GAAM,OAAI,SAACnB,EAAD,CAAYC,KAAMkB,EAAOlB,KAAME,GAAIgB,EAAOhB,QACpFiB,EAAYL,EAASA,SAASG,KAAI,SAAAV,GAAO,OAAI,SAACD,EAAD,CAASC,QAASA,EAAQA,QAASL,GAAIK,EAAQL,QAGhG,OACI,iCACI,uDACA,cAAGkB,MAAO,CAACC,UAAU,UAArB,6DACA,iBAAKlB,UAAWC,EAAAA,QAAhB,WAEI,gBAAKD,UAAWC,EAAAA,OAAhB,SACKW,KAGL,gBAAKZ,UAAWC,EAAAA,SAAhB,SACKe,KAGL,gBAAKhB,UAAWC,EAAAA,SAAhB,UAEI,kBAAMkB,SAAUV,GAAa,SAACW,GAAD,OAzBzBhB,EAyBgDgB,EAAKhB,QAxBrEE,EAAWF,QACXM,IAFe,IAACN,KAyBJ,WACI,uCACQI,EAAS,YADjB,IAEIa,KAAK,KACLC,KAAK,QAET,mBAAQC,KAAK,SAAb,8B,oBCnCxB,GAAeC,E,QAAAA,IACXC,EAAAA,GACAC,EAAAA,EAAAA,KAtBkB,SAACC,GACnB,MACI,CACItB,cAAesB,EAAMhB,SACrBiB,OAAQD,EAAME,KAAKD,WAKN,SAACE,GACtB,MACI,CACIxB,WAAY,SAACF,GACT0B,GAASC,EAAAA,EAAAA,GAAwB3B,SAOjD,CAGK4B,I,kJC3BDC,EAAkB,SAACN,GAAD,MAAY,CAC9BC,OAAQD,EAAME,KAAKD,SAGVH,EAAmB,SAACS,GAAe,IAEtCC,EAFqC,0IAGvC,WACI,OAAyB,GAArBC,KAAKC,MAAMT,QAAwB,SAAC,KAAD,CAAU1B,GAAG,YAE7C,SAACgC,GAAD,UAAeE,KAAKC,YANQ,GAEXC,EAAAA,WAUhC,OAF4BZ,EAAAA,EAAAA,IAAQO,EAARP,CAAyBS","sources":["webpack://my-app/./src/components/Dialog/Dialog.module.css?8ed7","components/Dialog/Dialog.jsx","components/Dialog/DialogContainer.js","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialog_dialogs__KeM1n\",\"user\":\"Dialog_user__Mm59e\",\"active\":\"Dialog_active__FPUge\",\"messages\":\"Dialog_messages__bXXk-\",\"message\":\"Dialog_message__NcxIn\",\"addPostBtn\":\"Dialog_addPostBtn__g7mKm\"};","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./Dialog.module.css\";\n\n\n\nconst DialogUser = ({ name, id }) => {\n\n    let path = \"/dialogs/\" + id;\n\n    return (\n        <div className={s.user}>\n            <NavLink to={path}>{name}</NavLink>\n        </div>\n    )\n}\n\nconst Message = ({ message }) => {\n    return (\n        <div className={s.message}>\n            {message}\n        </div>\n    )\n}\n\n\nconst Dialog = ({ stateMessages, addMessage }) => {\n\n    const { register, handleSubmit, reset } = useForm()\n\n    let messages = stateMessages\n\n    let onAddMessage = (message) => {\n        addMessage(message)\n        reset()\n    }\n\n    let dialogEl = messages.dialogs.map(dialog => <DialogUser name={dialog.name} id={dialog.id} />)\n    let messageEl = messages.messages.map(message => <Message message={message.message} id={message.id} />);\n\n\n    return (\n        <>\n            <h1>Attention! Useless page! </h1>\n            <p style={{textAlign:\"center\"}}>I save this page for \"WebSocket Chat\" lessons.</p>\n            <div className={s.dialogs}>\n\n                <div className={s.dialog}>\n                    {dialogEl}\n                </div>\n\n                <div className={s.messages}>\n                    {messageEl}\n                </div>\n\n                <div className={s.textarea}>\n\n                    <form onSubmit={handleSubmit((data) => onAddMessage(data.message))}>\n                        <textarea\n                            {...register(\"message\")}\n                            cols=\"30\"\n                            rows=\"5\"\n                        />\n                        <button type=\"submit\">Send</button>\n                    </form>\n\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Dialog;","import { addMessageActionCreator, updateNewMessageTextActionCreator } from \"../../redux/dialogReducer\";\nimport Dialog from \"./Dialog\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect, WithAuthRedirect } from \"../../hoc/WithAuthRedirect\";\nimport { compose } from \"redux\";\n\n\n\nlet mapStateToProps = (state) => {\n    return (\n        {\n            stateMessages: state.messages,\n            isAuth: state.auth.isAuth\n        }\n    )\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return (\n        {\n            addMessage: (message) => {\n                dispatch(addMessageActionCreator(message))\n            }\n        }\n    )\n}\n\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, mapDispatchToProps))\n    (Dialog)","import { connect } from \"react-redux\"\nimport { Navigate } from \"react-router-dom\"\nimport React from \"react\";\n\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (this.props.isAuth == false) return <Navigate to=\"/login\" />\n\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirect = connect(mapStateToProps)(RedirectComponent)\n\n    return ConnectedAuthRedirect\n}\n\n\n\n"],"names":["DialogUser","name","path","id","className","s","to","Message","message","stateMessages","addMessage","useForm","register","handleSubmit","reset","messages","dialogEl","dialogs","map","dialog","messageEl","style","textAlign","onSubmit","data","cols","rows","type","compose","withAuthRedirect","connect","state","isAuth","auth","dispatch","addMessageActionCreator","Dialog","mapStateToProps","Component","RedirectComponent","this","props","React"],"sourceRoot":""}