{"version":3,"file":"static/js/682.729f6ef2.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfilePhotoChangeBar.jsx","components/Profile/ProfileInfo/ProfileAboutMe.jsx","components/Profile/ProfileInfo/EditProfileAboutMe.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js","components/common/withRouter.js","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"userInfo\":\"ProfileInfo_userInfo__AcMDd\",\"coverImage\":\"ProfileInfo_coverImage__Y20fc\",\"userAvatar\":\"ProfileInfo_userAvatar__+uFDb\",\"status\":\"ProfileInfo_status__YrBI5\",\"steer\":\"ProfileInfo_steer__ECpf7\",\"changeAvatar\":\"ProfileInfo_changeAvatar__eWg6c\",\"statusBar\":\"ProfileInfo_statusBar__pmZeI\"};","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport s from \"./ProfileInfo.module.css\";\n\n\n\n\nconst ProfileStatus = ({ userStatus, onUpdateUserStatus}) => {\n\n    let [status, setStatus] = useState(userStatus)\n    let [editMode, setEditMode] = useState(false)\n\n    useEffect(() => {\n        setStatus(userStatus)\n    },[userStatus])\n\n\n    return (\n        <div className={s.statusBar}>\n            {!editMode ?\n                <div>\n                    <span\n                    className={s.status}\n                        onDoubleClick={() => setEditMode(true)}\n                    >\n                        {userStatus || \"No Status\"}\n                    </span>\n                    <div className={s.steer} >double click to edit</div>\n                </div>\n                :\n                <div>\n                    <input\n                        autoFocus={true}\n                        onBlur={() => {\n                            setEditMode(false)\n                            onUpdateUserStatus(status)\n                        }}\n                        value={status}\n                        onChange={(e) => setStatus(e.target.value)} />\n                        <div className={s.steer} >click away to save</div>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatus","import React, { useState } from \"react\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport s from \"./ProfileInfo.module.css\";\n\n\n\n\nconst ProfilePhotoChangeBar = ({ uploadPhotoHandler, photoUploadError, photoLoading }) => {\n    let [photo, setPhoto] = useState(null)\n\n    return (\n        <div style={{ marginTop: \"10px\" }}>\n            {\n                photoLoading ?\n                    <Preloader />\n                    :\n                    <div className={s.changeAvatar}>\n                        <input onChange={(e) => setPhoto(e.target.files[0])} type=\"file\" />\n                        <button disabled={!photo} onClick={() => uploadPhotoHandler(photo)}>Upload</button>\n                        <p>{photoUploadError ? photoUploadError : null}</p>\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfilePhotoChangeBar","import s from \"./ProfileInfo.module.css\";\n\n\n\n\nconst ProfileAboutMe = ({ userProfile, setEditMode, isOwner }) => {\n    return (\n        <span className={s.info}>\n            <p>\n                <b>Nickname:</b> <span style={{ color: \"blue\", border: \"1px green solid\", borderRadius: \"5px\", padding: \"3px\" }}>{userProfile.fullName === null ? \"Anonim\" : userProfile.fullName}</span>\n            </p>\n            <p >\n                <b>Looking for a job:</b> <span style={{ color: userProfile.lookingForAJob ? \"green\" : \"red\" }}>{userProfile.lookingForAJob ? \"Yes\" : \"No\"}</span>\n            </p>\n            {\n                userProfile.lookingForAJobDescription ?\n                    <p >\n                        <b>Professional Skills:</b> {userProfile.lookingForAJobDescription}\n                    </p>\n                    :\n                    null\n            }\n            {\n                isOwner ?\n                    <button onClick={() => setEditMode(true)}>Edit</button>\n                    :\n                    null\n            }\n        </span>\n    )\n}\n\nexport default ProfileAboutMe","import { useForm } from \"react-hook-form\"\nimport Preloader from \"../../common/Preloader/Preloader\"\n\n\n\nconst EditProfileAboutMe = ({ setEditMode, changeAboutMeInfo, aboutMeLoading, aboutMeError }) => {\n\n    const onSubmitEditedInformation = (data) => {\n        changeAboutMeInfo(data, setEditMode)\n    }\n\n    const { register, handleSubmit, formState: { errors, isValid } } = useForm({ mode: \"onBlur\" })\n\n    return (\n        <>\n            {\n                aboutMeLoading ?\n                    <Preloader />\n                    :\n                    <form onSubmit={handleSubmit(data => onSubmitEditedInformation((data)))}>\n                        <p>\n                            <b>Nickname:</b> <input {...register(\"fullName\", {\n                                required: \"Field is required!\",\n                                minLength: {\n                                    value: 5,\n                                    message: \"Min length 5 symbols\"\n                                },\n                                maxLength: {\n                                    value: 15,\n                                    message: \"Max length 15 symbols\"\n                                }\n                            })} type=\"text\" />\n                            <br />\n                            <strong style={{ color: \"red\" }}>{errors?.fullName?.message ? errors.fullName.message : null}</strong>\n                        </p>\n                        <p >\n                            <b>Looking for a job:</b> <input {...register(\"lookingForAJob\")} type=\"checkbox\" />\n                        </p>\n\n                        <p >\n                            <b>Professional Skills:</b> <input {...register(\"lookingForAJobDescription\", {\n                                required: \"Field is required!\",\n                                minLength: {\n                                    value: 5,\n                                    message: \"Min length 5 symbols\"\n                                },\n                                maxLength: {\n                                    value: 50,\n                                    message: \"Max length 50 symbols\"\n                                }\n                            })} type=\"text\" />\n                            <br />\n                            <strong style={{ color: \"red\" }}>\n                                {errors?.lookingForAJobDescription?.message ? errors.lookingForAJobDescription.message : null}\n                            </strong>\n\n                        </p>\n                        <button onClick={() => setEditMode(false)}>Close</button>\n                        <input disabled={!isValid} type=\"submit\" />\n\n                        {\n                            aboutMeError ?\n                                <p>{aboutMeError}</p>\n                                :\n                                null\n                        }\n                    </form>\n            }\n        </>\n    )\n}\n\n\n\nexport default EditProfileAboutMe","import React from \"react\";\nimport s from \"./ProfileInfo.module.css\";\nimport avatarDefault from \"../../../assets/images/defaultAvatar.jpeg\"\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus\";\nimport { useState } from \"react\";\nimport ProfilePhotoChangeBar from \"./ProfilePhotoChangeBar\";\nimport ProfileAboutMe from \"./ProfileAboutMe\";\nimport EditProfileAboutMe from \"./EditProfileAboutMe\";\n\nconst ProfileInfo = (props) => {\n\n    let currentUserId = props.currentUserId ? props.currentUserId : props.myId\n    let [editMode, setEditMode] = useState(false)\n\n    return (\n        props.isFetching ?\n            <Preloader />\n            :\n            <div className={s.profileInfo}>\n                <div className={s.coverImage}>\n                    <img src='https://i.pinimg.com/736x/64/cc/fa/64ccfa4a392b9f3e1c6004fcedd3a18c.jpg' />\n                </div>\n\n                <span className={s.userInfo}>\n\n                    <span className={s.userAvatar}>\n\n                        {\n                            props.photoLoading ?\n                                <Preloader />\n                                :\n                                <img\n                                    style={{ width: \"300px\", height: \"300px\" }}\n                                    src={props.userProfile.photos.large === null ?\n                                        avatarDefault :\n                                        props.userProfile.photos.large}\n                                    alt=\"avatar\"\n                                />\n                        }\n\n                        {\n                            props.isOwner ?\n                                <ProfilePhotoChangeBar\n                                    uploadPhotoHandler={props.uploadPhotoHandler}\n                                    photoUploadError={props.photoUploadError}\n                                    photoLoading={props.photoLoading}\n                                />\n                                :\n                                null\n                        }\n\n\n                        {\n                            currentUserId != props.myId ?\n                                <p>{props.userStatus ? props.userStatus : \"No Status\"}</p>\n                                :\n                                <ProfileStatus\n                                    userStatus={props.userStatus}\n                                    onUpdateUserStatus={props.onUpdateUserStatus} />\n                        }\n\n                    </span>\n\n                    <span>\n\n                        {editMode ?\n                            <EditProfileAboutMe\n                                changeAboutMeInfo={props.changeAboutMeInfo}\n                                setEditMode={setEditMode}\n                                aboutMeLoading={props.aboutMeLoading}\n                                aboutMeError={props.aboutMeError}\n                            />\n                            :\n                            <ProfileAboutMe isOwner={props.isOwner} setEditMode={setEditMode} userProfile={props.userProfile} />\n                        }\n                    </span>\n\n\n                </span>\n            </div>\n    )\n\n\n\n\n\n\n\n\n}\n\n\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__IclvI\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import React from \"react\";\nimport s from \"./Post.module.css\"\n\n\nconst Post = ({ message, likecounter }) => {\n    return (\n        <div>\n            <div className={s.item}>\n                <div>\n                    <img src=\"https://www.shareicon.net/data/512x512/2016/09/01/822711_user_512x512.png\" />\n                    {message}\n                </div>\n\n                <div><span>Like {likecounter}</span></div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport s from \"./MyPosts.module.css\"\nimport Post from \"./Post/Post\"\n\n\nconst MyPosts = ({ addPost, posts }) => {\n\n    const { register, handleSubmit, reset } = useForm()\n\n    let onAddPost = (newPost) => {\n        addPost(newPost)\n        reset()\n    }\n\n    let postEl = posts.map(post => <Post key={post.id} message={post.message} likecounter={post.likecounter} />)\n\n    return (\n        <div className={s.myPosts}>\n            <h3>My posts</h3>\n\n\n            <div className={s.newPost}>\n                <form onSubmit={handleSubmit((data) => onAddPost(data.post))}>\n                    <div className={s.textArea}>\n                        <textarea\n                            {...register(\"post\")}\n                            cols=\"30\"\n                            rows=\"5\"\n                        />\n                    </div>\n                    <div className={s.button}>\n                        <button type=\"submit\">Send</button>\n                    </div>\n                </form>\n            </div>\n\n            <div className={s.posts}>\n                {postEl}\n            </div>\n\n        </div>\n    )\n}\n\nexport default MyPosts;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addPostActionCreator } from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\n\n\nlet mapStateToProps = (state) => {\n    return (\n        {\n            posts: state.profile.posts\n        }\n    )\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return (\n        {\n            addPost: (newPost) => {\n                dispatch(addPostActionCreator(newPost))\n            }\n        }\n    )\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;","import React from \"react\";\nimport s from \"./Profile.module.css\"\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\n\nconst Profile = (props) => {\n    return (\n        <div className={s.content}>\n            <ProfileInfo\n                aboutMeLoading={props.aboutMeLoading}\n                aboutMeError={props.aboutMeError}\n                changeAboutMeInfo={props.changeAboutMeInfo}\n                isOwner={props.isOwner}\n                photoLoading={props.photoLoading}\n                photoUploadError={props.photoUploadError}\n                uploadPhotoHandler={props.uploadPhotoHandler}\n                currentUserId={props.router.params.userId}\n                myId={props.myId}\n                onUpdateUserStatus={props.onUpdateUserStatus}\n                userProfile={props.userProfile}\n                isFetching={props.isFetching}\n                userStatus={props.userStatus}\n            />\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUserProfile, getUserStatus, saveAboutMeInfoThunk, updateUserStatus, uploadPhotoThunk } from \"../../redux/profileReducer\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport Profile from \"./Profile\";\nimport { compose } from \"redux\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { withAuthRedirect } from \"../../hoc/WithAuthRedirect\";\nimport { withRouter } from \"../common/withRouter\";\n\n\n\n\nclass ProfileContainer extends React.Component {\n\n    changeAboutMeInfo = (data, setEditMode, id = this.props.myId) => {\n        this.props.saveAboutMeInfoThunk(data, setEditMode, id)\n    }\n\n    refreshProfile = () => {\n        let userId = this.props.router.params.userId ? this.props.router.params.userId : this.props.myId\n        this.props.getUserProfile(userId)\n        this.props.getUserStatus(userId)\n    }\n\n    uploadPhotoHandler = (photo) => {\n        this.props.uploadPhotoThunk(photo)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.router.params.userId != prevProps.router.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    onUpdateUserStatus = (status) => {\n        this.props.updateUserStatus(status)\n    }\n\n    render() {\n        let userId = this.props.myId\n        if (!userId) {\n            return <Preloader />\n        }\n        if (userId) {\n            return <Profile\n                {...this.props}\n                changeAboutMeInfo={this.changeAboutMeInfo}\n                isOwner={!this.props.router.params.userId || this.props.router.params.userId == this.props.myId}\n                onUpdateUserStatus={this.onUpdateUserStatus}\n                uploadPhotoHandler={this.uploadPhotoHandler}\n            />\n        }\n\n    }\n\n}\n\nlet mapStateToProps = (state) => ({\n    userProfile: state.profile.userProfile,\n    isFetching: state.profile.isFetching,\n    userStatus: state.profile.userStatus,\n    photoLoading: state.profile.photoLoading,\n    photoUploadError: state.profile.photoUploadError,\n    isAuth: state.auth.isAuth,\n    myId: state.auth.id,\n    aboutMeLoading: state.profile.aboutMeLoading,\n    aboutMeError: state.profile.aboutMeError,\n})\n\n\nexport default compose(\n    withAuthRedirect,\n    withRouter,\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus, uploadPhotoThunk, saveAboutMeInfoThunk }))(ProfileContainer)\n","import { useLocation, useNavigate, useParams } from \"react-router-dom\";\n\n\nexport const withRouter = (Component) => {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n\n    return ComponentWithRouterProp;\n}\n","import { connect } from \"react-redux\"\nimport { Navigate } from \"react-router-dom\"\nimport React from \"react\";\n\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (this.props.isAuth == false) return <Navigate to=\"/login\" />\n\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirect = connect(mapStateToProps)(RedirectComponent)\n\n    return ConnectedAuthRedirect\n}\n\n\n\n"],"names":["userStatus","onUpdateUserStatus","useState","status","setStatus","editMode","setEditMode","useEffect","className","s","autoFocus","onBlur","value","onChange","e","target","onDoubleClick","uploadPhotoHandler","photoUploadError","photoLoading","photo","setPhoto","style","marginTop","Preloader","files","type","disabled","onClick","userProfile","isOwner","color","border","borderRadius","padding","fullName","lookingForAJob","lookingForAJobDescription","changeAboutMeInfo","aboutMeLoading","aboutMeError","useForm","mode","register","handleSubmit","formState","errors","isValid","onSubmit","data","onSubmitEditedInformation","required","minLength","message","maxLength","props","currentUserId","myId","isFetching","src","width","height","photos","large","avatarDefault","alt","likecounter","addPost","posts","reset","postEl","map","post","id","newPost","cols","rows","connect","state","profile","dispatch","addPostActionCreator","MyPosts","router","params","userId","ProfileContainer","saveAboutMeInfoThunk","refreshProfile","getUserProfile","getUserStatus","uploadPhotoThunk","updateUserStatus","this","prevProps","prevState","snapshot","React","compose","withAuthRedirect","Component","location","useLocation","navigate","useNavigate","useParams","isAuth","auth","mapStateToProps","RedirectComponent","to"],"sourceRoot":""}